name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Copy frontend dist to backend
        run: cp -r ./frontend/dist ./backend/internal/web/frontend_dist

      - name: Build Go binary for Linux AMD64
        working-directory: ./backend
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -tags embed \
            -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
            -o ../gitlab-merge-alert-linux-amd64 \
            ./cmd/main.go

      - name: Build Go binary for Linux ARM64
        working-directory: ./backend
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build \
            -tags embed \
            -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
            -o ../gitlab-merge-alert-linux-arm64 \
            ./cmd/main.go

      - name: Build Go binary for Darwin AMD64
        working-directory: ./backend
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build \
            -tags embed \
            -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
            -o ../gitlab-merge-alert-darwin-amd64 \
            ./cmd/main.go

      - name: Build Go binary for Darwin ARM64
        working-directory: ./backend
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build \
            -tags embed \
            -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
            -o ../gitlab-merge-alert-darwin-arm64 \
            ./cmd/main.go

      - name: Build Go binary for Windows AMD64
        working-directory: ./backend
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build \
            -tags embed \
            -ldflags="-s -w -X main.version=${{ github.ref_name }}" \
            -o ../gitlab-merge-alert-windows-amd64.exe \
            ./cmd/main.go

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            gitlab-merge-alert-linux-amd64
            gitlab-merge-alert-linux-arm64
            gitlab-merge-alert-darwin-amd64
            gitlab-merge-alert-darwin-arm64
            gitlab-merge-alert-windows-amd64.exe
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ secrets.DOCKERHUB_USERNAME != '' }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ secrets.DOCKERHUB_USERNAME != '' && format('{0}/gitlab-merge-alert-go', secrets.DOCKERHUB_USERNAME) || '' }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}